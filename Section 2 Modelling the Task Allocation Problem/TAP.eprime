language ESSENCE' 1.0

given NumberOfPeople: int
given NumberOfTask: int
given Deadline:int



given Duration: matrix indexed by [int(1..NumberOfTask)] of int(1..)

given Bids: matrix indexed by [int(1..NumberofPeople),int(1..NumberOfTask)] of bool

find Allocation: matrix indexed by [int(1..NumberofPeople),int(1..NumberOfTask)] of bool
find cost:int(0..100)
minimising cost

such that


$There is one task for each person
forall i : int(1..NumberOfTask). 
	sum(Allocation[..,i]) = 1,

$The total amount of time for each person is less then the deadline	
forall i : int(1..NumberOfPeople).
	sum([Duration[j]*Allocation[i,j]| j: int(1..NumberOfTask)])<=Deadline,
	

$Minimise the number of Bids
cost = (sum i : int(1..NumberOfPeople).
sum j : int(1..NumberOfTask). (Allocation[i,j]!=Bids[i,j]) /\ Allocation[i,j] = true) * (sum i : int(1..NumberOfPeople).
sum j : int(1..NumberOfTask). (Allocation[i,j]!=Bids[i,j]) /\ Allocation[i,j] = true )
 



	
		
	




