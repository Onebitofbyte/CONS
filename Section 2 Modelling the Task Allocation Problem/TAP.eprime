language ESSENCE' 1.0

given NumberOfPeople: int
given NumberOfTask: int
given Deadline:int



given Duration: matrix indexed by [int(1..NumberOfTask)] of int(1..)

given Bids: matrix indexed by [int(1..NumberofPeople),int(1..NumberOfTask)] of bool

find Allocation: matrix indexed by [int(1..NumberofPeople),int(1..NumberOfTask)] of bool
find cost:int(1..10)
minimising cost*cost

such that


$There is one task for each person
forall i : int(1..NumberOfTask). 
	sum(Allocation[..,i]) = 1,
	
forall i : int(1..NumberOfPeople).
	sum([Duration[j]*Allocation[i,j]| j: int(1..NumberOfTask)])<=Deadline,

cost = sum i : int(1..NumberOfPeople).
sum j : int(1..NumberOfTask). (Allocation[i,j]!=Bids[i,j]) /\ Allocation[i,j] = true
 
$cost = sum([(Allocation[i,j]*(Bids[i,j]))**2|$j:int(1..NumberOfTask),i:int(1..NumberOfPeople)])



	
		
	




